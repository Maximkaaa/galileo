[package]
name = "galileo"
version.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true
keywords.workspace = true
documentation = "https://docs.rs/galileo"
description = "Cross-platform general purpose map rendering engine"
readme = "../README.md"
exclude = [
    "examples/data",
]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["wgpu", "serde", "winit"]
wgpu = ["dep:wgpu", "raw-window-handle"]
geojson = ["dep:geojson", "galileo-types/geojson"]

# Used to provide some fixtures for doctests
_tests = []

[dependencies]
cfg-if = "1"
async-trait = "0.1.68"
bytemuck = { version = "1.14", features = ["derive"] }
bytes = "1.4.0"
futures = "0.3.28"
winit = { version ="0.29", features = ["rwh_06"], optional = true }
log = "0.4"
lyon = { version = "1" }
galileo-types = { path = "../galileo-types", version = "0.1.1" }
galileo-mvt = { path = "../galileo-mvt", version = "0.1.1" }
num-traits = "0.2.17"
serde = { version = "1.0", optional = true, features = ["std", "derive"] }
web-time = "1.0"
thiserror = "1.0"
nalgebra = "0.32"
quick_cache = "0.4"
futures-intrusive = "0.5"
geojson = { version = "0.24", optional = true }
raw-window-handle = { version = "0.6", optional = true }
geozero = "0.13.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
wgpu = { version = "0.19", optional = true }
tokio = { version = "1.28.2", features = ["macros", "rt", "rt-multi-thread" ] }
maybe-sync = {  version = "0.1", features = ["sync"] }
reqwest = "0.11.18"
rayon = "1.8"
image = { version = "0.24", default-features = false, features = ["png", "jpeg"]}

[target.'cfg(target_arch = "wasm32")'.dependencies]
bytemuck = { version = "1.14", features = ["derive", "extern_crate_alloc"] }
console_error_panic_hook = "0.1"
console_log = "1.0"
wgpu = { version = "0.19", default-features = false, features = ["webgl", "wgsl"] }
wasm-bindgen-futures = { version = "0.4" }
wasm-bindgen = "0.2"
wasm-bindgen-derive = { version = "0.2" }
js-sys = { version = "0.3" }
serde = { version = "1.0", features = ["std", "derive"] }
serde_bytes = { version = "0.11" }
bincode = "1.3"
serde-wasm-bindgen = "0.6"
maybe-sync = {  version = "0.1", features = [] }
getrandom = { version = "0.2", features = ["js"] }
web-sys = { version = "0.3", features = [
    "Document",
    "Window",
    "Element",
    "HtmlImageElement",
    "HtmlCanvasElement",
    "CanvasRenderingContext2d",
    "ImageData",
    "Request",
    "Headers",
    "RequestInit",
    "RequestMode",
    "Response",
    "Worker",
    "DedicatedWorkerGlobalScope",
    "MessageEvent",
]}

[target.'cfg(target_os = "android")'.dependencies]
reqwest = { version = "0.11.18", features = ["native-tls-vendored"] }
winit = {version = "0.29", features = ["android-native-activity"] }


[dev-dependencies]
tokio-test = "0.4"
env_logger = "0.11"
serde_json = "1.0"
notify = "6.1"
bincode = "1.3"
approx = "0.5"
lazy_static = "1.4"
geo = "0.27"
csv = "1.3"
geo-types = "0.7"
las = { version = "0.8", features = ["laz"] }
anyhow = "1.0"
geojson = "0.24"
assert_matches = "1.5"

[[example]]
name = "render_to_file"
required-features = ["geojson"]
